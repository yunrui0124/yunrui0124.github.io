<%@LANGUAGE="JAVASCRIPT" CODEPAGE="65001"%>
<%
    Response.AddHeader("Access-Control-Allow-Origin", "*");
    Response.AddHeader("P3P", "CP=CAO PSA OUR");
    
%>

<%
    /*
    * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
    * Digest Algorithm, as defined in RFC 1321.
    * Copyright (C) Paul Johnston 1999 - 2000.
    * Updated by Greg Holt 2000 - 2001.
    * See http://pajhome.org.uk/site/legal.html for details.
    */

    /*
    * Convert a 32-bit number to a hex string with ls-byte first
    */
    var hex_chr = "0123456789abcdef";
    function rhex(num) {
        str = "";
        for (j = 0; j <= 3; j++)
            str += hex_chr.charAt((num >> (j * 8 + 4)) & 0x0F) +
           hex_chr.charAt((num >> (j * 8)) & 0x0F);
        return str;
    }

    /*
    * Convert a string to a sequence of 16-word blocks, stored as an array.
    * Append padding bits and the length, as described in the MD5 standard.
    */
    function str2blks_MD5(str) {
        nblk = ((str.length + 8) >> 6) + 1;
        blks = new Array(nblk * 16);
        for (i = 0; i < nblk * 16; i++) blks[i] = 0;
        for (i = 0; i < str.length; i++)
            blks[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);
        blks[i >> 2] |= 0x80 << ((i % 4) * 8);
        blks[nblk * 16 - 2] = str.length * 8;
        return blks;
    }

    /*
    * Add integers, wrapping at 2^32. This uses 16-bit operations internally 
    * to work around bugs in some JS interpreters.
    */
    function add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF);
        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
    }

    /*
    * Bitwise rotate a 32-bit number to the left
    */
    function rol(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    }

    /*
    * These functions implement the basic operation for each round of the
    * algorithm.
    */
    function cmn(q, a, b, x, s, t) {
        return add(rol(add(add(a, q), add(x, t)), s), b);
    }
    function ff(a, b, c, d, x, s, t) {
        return cmn((b & c) | ((~b) & d), a, b, x, s, t);
    }
    function gg(a, b, c, d, x, s, t) {
        return cmn((b & d) | (c & (~d)), a, b, x, s, t);
    }
    function hh(a, b, c, d, x, s, t) {
        return cmn(b ^ c ^ d, a, b, x, s, t);
    }
    function ii(a, b, c, d, x, s, t) {
        return cmn(c ^ (b | (~d)), a, b, x, s, t);
    }

    /*
    * Take a string and return the hex representation of its MD5.
    */
    function calcMD5(str) {
        x = str2blks_MD5(str);
        a = 1732584193;
        b = -271733879;
        c = -1732584194;
        d = 271733878;

        for (i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;

            a = ff(a, b, c, d, x[i + 0], 7, -680876936);
            d = ff(d, a, b, c, x[i + 1], 12, -389564586);
            c = ff(c, d, a, b, x[i + 2], 17, 606105819);
            b = ff(b, c, d, a, x[i + 3], 22, -1044525330);
            a = ff(a, b, c, d, x[i + 4], 7, -176418897);
            d = ff(d, a, b, c, x[i + 5], 12, 1200080426);
            c = ff(c, d, a, b, x[i + 6], 17, -1473231341);
            b = ff(b, c, d, a, x[i + 7], 22, -45705983);
            a = ff(a, b, c, d, x[i + 8], 7, 1770035416);
            d = ff(d, a, b, c, x[i + 9], 12, -1958414417);
            c = ff(c, d, a, b, x[i + 10], 17, -42063);
            b = ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = ff(a, b, c, d, x[i + 12], 7, 1804603682);
            d = ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = ff(b, c, d, a, x[i + 15], 22, 1236535329);

            a = gg(a, b, c, d, x[i + 1], 5, -165796510);
            d = gg(d, a, b, c, x[i + 6], 9, -1069501632);
            c = gg(c, d, a, b, x[i + 11], 14, 643717713);
            b = gg(b, c, d, a, x[i + 0], 20, -373897302);
            a = gg(a, b, c, d, x[i + 5], 5, -701558691);
            d = gg(d, a, b, c, x[i + 10], 9, 38016083);
            c = gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = gg(b, c, d, a, x[i + 4], 20, -405537848);
            a = gg(a, b, c, d, x[i + 9], 5, 568446438);
            d = gg(d, a, b, c, x[i + 14], 9, -1019803690);
            c = gg(c, d, a, b, x[i + 3], 14, -187363961);
            b = gg(b, c, d, a, x[i + 8], 20, 1163531501);
            a = gg(a, b, c, d, x[i + 13], 5, -1444681467);
            d = gg(d, a, b, c, x[i + 2], 9, -51403784);
            c = gg(c, d, a, b, x[i + 7], 14, 1735328473);
            b = gg(b, c, d, a, x[i + 12], 20, -1926607734);

            a = hh(a, b, c, d, x[i + 5], 4, -378558);
            d = hh(d, a, b, c, x[i + 8], 11, -2022574463);
            c = hh(c, d, a, b, x[i + 11], 16, 1839030562);
            b = hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = hh(a, b, c, d, x[i + 1], 4, -1530992060);
            d = hh(d, a, b, c, x[i + 4], 11, 1272893353);
            c = hh(c, d, a, b, x[i + 7], 16, -155497632);
            b = hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = hh(a, b, c, d, x[i + 13], 4, 681279174);
            d = hh(d, a, b, c, x[i + 0], 11, -358537222);
            c = hh(c, d, a, b, x[i + 3], 16, -722521979);
            b = hh(b, c, d, a, x[i + 6], 23, 76029189);
            a = hh(a, b, c, d, x[i + 9], 4, -640364487);
            d = hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = hh(c, d, a, b, x[i + 15], 16, 530742520);
            b = hh(b, c, d, a, x[i + 2], 23, -995338651);

            a = ii(a, b, c, d, x[i + 0], 6, -198630844);
            d = ii(d, a, b, c, x[i + 7], 10, 1126891415);
            c = ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = ii(b, c, d, a, x[i + 5], 21, -57434055);
            a = ii(a, b, c, d, x[i + 12], 6, 1700485571);
            d = ii(d, a, b, c, x[i + 3], 10, -1894986606);
            c = ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = ii(b, c, d, a, x[i + 1], 21, -2054922799);
            a = ii(a, b, c, d, x[i + 8], 6, 1873313359);
            d = ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = ii(c, d, a, b, x[i + 6], 15, -1560198380);
            b = ii(b, c, d, a, x[i + 13], 21, 1309151649);
            a = ii(a, b, c, d, x[i + 4], 6, -145523070);
            d = ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = ii(c, d, a, b, x[i + 2], 15, 718787259);
            b = ii(b, c, d, a, x[i + 9], 21, -343485551);

            a = add(a, olda);
            b = add(b, oldb);
            c = add(c, oldc);
            d = add(d, oldd);
        }
        return rhex(a) + rhex(b) + rhex(c) + rhex(d);
    }
%>
<%
    var Toolbox = function () {
        var HTTP_REFERER = Request.ServerVariables("HTTP_REFERER") + "";
        this.HTTP_REFERER = HTTP_REFERER;
        var APPL_PHYSICAL_PATH = Request.Servervariables("APPL_PHYSICAL_PATH") + ""; /*网站的根目录*/
        var SERVER_NAME = Request.ServerVariables("SERVER_NAME");
        this.APPL_PHYSICAL_PATH = APPL_PHYSICAL_PATH;
        this.SERVER_NAME = SERVER_NAME;
        /*作用:把一个字典组装为url参数字符串
        *@paramObj:深度为1的字典，例:{"p1":"v1", "p2":"v2"}
        *返回值:返回url参数字符串,例: "p1=v1&p2=v2"
        */
        this.getParam = function (paramObj) {
            var tmp = [];
            for (var e in paramObj) {
                tmp.push("%s1=%s2".replace("%s1", e).replace("%s2", paramObj[e]));
            }
            return tmp.join("&");
        }

        /*作用:获取fun函数里的注释内容
        *fun: 函数
        *返回: fun函数的注释内容
        */
        this.string = function $string(fun) {
            var funStr = fun + "";
            var reg = /\/\*/img;
            var r = reg.exec(funStr);
            var start = null;
            var stop = null;
            if (r) {
                start = reg.lastIndex;
                reg = /\*\//img;
                r = reg.exec(funStr);
                if (r) {
                    stop = reg.lastIndex;
                    return funStr.substring(start, stop - 2);
                }
            }
            throw "语法错误..."
        }

        /*网络操作类型*/
        this.ajax = {};

        /*作用:通过POST方式请求URL
        *@url: 待请求的目标URL
        *@data: 请求附带的数据
        *@contentType: 自定义Content-Type 默认为 Content-Type:application/x-www-form-urlencoded;
        *返回值: 返回请求返回的对象
        */
        this.ajax.post = function (url, data, contentType) {
            var req = Server.CreateObject("MSXML2.XMLHTTP");
            req.open("POST", url, false, "", "");
            if (contentType) {
                req.setRequestHeader("Content-Type", contentType);
            } else {
                req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
            }
            req.send(data);
            return req;
        }

        /*作用:通过GET方式请求URL
        *@url: 待请求的目标URL
        *@contentType: 自定义Content-Type 默认为 Content-Type:application/x-www-form-urlencoded;
        *返回值: 返回请求返回的对象
        */
        this.ajax.get = function (url, contentType) {
            var req = Server.CreateObject("MSXML2.XMLHTTP");
            req.open("GET", url, false, "", "");
            if (contentType) {
                req.setRequestHeader("Content-Type", contentType);
            } else {
                req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
            }
            req.send(null);
            return req;
        }

        /*验证远程url是否有效
        *@url: 待验证的url
        *返回值: 有效返回 true, 否则返回 false
        */
        this.ajax.verify_url = function (url) {
            var req = Server.CreateObject("MSXML2.XMLHTTP");
            req.open("HEAD", url, false, "", "");
            req.send(null);
            //Response.Write(req.status);
            if (req.status == 200) {
                return true;
            }
            return false;
        }

        /*文件操作操作类*/
        this.file = {};

        /*作用: 保存文本文件
        *@full_file_name: 包含完整路径的文件名
        *@content: 文件内容
        *@charset: 文件内容的编码 可选
        */
        var save_text = function (full_file_name, content, charset) {
            var ads = Server.CreateObject("ADODB.Stream");
            ads.Charset = "utf-8";
            if (charset) ads.Charset = charset;
            ads.Type = 2; /*1:二进制 2:文本*/
            ads.Mode = 3;
            ads.Open();
            ads.WriteText(content);
            ads.SaveToFile(full_file_name, 2);
            ads.Cancel();
            ads.Close();
            delete ads;
        }
        this.file.save_text = save_text;

        /*作用:获取二进制、文件字节数、文件名
        *@file_content: 文件内容
        *返回对象{bin:二进制数据,size:数据大小,name:文件名}
        */
        this.file.get_bin_info = function (file_content, bLen) {
            var oo = Server.createObject("ADODB.Stream");
            /*获取文件大小*/
            oo.open();
            oo.type = 1;
            oo.write(file_content);
            oo.position = 0;
            oo.type = 2;
            oo.charset = "unicode";
            var gbCode = escape(oo.readText()).replace(/%u(..)(..)/g, "%$2%$1");

            var sPos = gbCode.indexOf("%0D%0A%0D%0A") + 12; //12
            var reg = /%0D%0A%0D%0A/img;
            reg.exec(gbCode);
            reg.exec(gbCode);
            reg.exec(gbCode);
            sPos = reg.lastIndex;
            var sLength = bLen - (gbCode.substring(0, gbCode.indexOf("%0D%0A")).length / 3) - sPos / 3 - 6;
            oo.close();

            /*获取文件二进制内容*/
            oo.open();
            oo.type = 1;
            oo.write(file_content);
            oo.position = sPos / 3;
            var bFile = oo.read(sLength);
            oo.close();

            /*获取文件名*/
            oo.open();
            oo.type = 2;
            oo.writeText(file_content);
            oo.position = 0;
            oo.charset = "gb2312";
            var fileName = oo.readText().match(/filename=\"(.+?)\"/i)[1].split("\\").slice(-1)[0];
            oo.close();

            delete oo;
            return { bin: bFile, size: sLength, name: fileName };
        }

        /*作用: 保存文件
        *@full_file_name: 包含完整路径的文件名
        *@file_obj: 文件对象
        */
        var save_file = function (full_file_name, file_obj) {
            //try {
            var ads = Server.CreateObject("ADODB.Stream");
            ads.Type = 1;
            ads.Mode = 3;
            ads.Open();
            ads.Write(file_obj);
            ads.SaveToFile(full_file_name, 2);
            ads.Cancel();
            ads.Close();
            delete ads;
            //} catch (err) {
            //    Response.Write(err.description);
            //}
        }
        this.file.save_file = save_file;

        /*作用: 打开文本文件
        *@full_file_name: 包含完整路径的文件名
        *@charset: 文件内容的编码 可选
        *返回文件内容
        */
        var read_text = function (full_file_name, charset) {
            var Stream = Server.CreateObject("ADODB.Stream");
            var adReadAll = -1, adReadLine = -2;
            Stream.Type = 2;
            Stream.CharSet = "utf-8";
            if (charset) Stream.Charset = charset;
            Stream.Open();
            Stream.LoadFromFile(full_file_name);
            var content = Stream.ReadText(adReadAll);
            Stream.Close();
            delete Stream;
            return content;
        }
        this.file.read_text = read_text;

        /*作用: 获取指定目录的所有文件名(包括子目录)
        *@path: 指定的目录
        *@返回值: 返回文件路径列表
        */
        this.file.get_all_path = function (mPath) {
            /*作用:递归遍历路径获取文件名
            *@path: 当前路径
            *@file_list: 用来保存文件名的数组
            */
            function _get_all_path(path, file_list) {
                var objFSO = Server.CreateObject("Scripting.FileSystemObject");
                if (!objFSO.FolderExists(path)) {
                    return;
                }
                var folder = objFSO.GetFolder(path);
                var fenum = new Enumerator(folder.SubFolders); //subFolders Files
                var fileEnum = new Enumerator(folder.Files);   //subFolders Files
                /*遍历某目录的文件*/
                for (var i = 0; !fileEnum.atEnd(); fileEnum.moveNext(), i++) {
                    var fname = fileEnum.item().Name;
                    var filePath = path + "\\" + fname;
                    filePath = filePath.replace(/\\\\/img, "\\");
                    file_list.push(filePath);
                }
                /*遍历目录*/
                for (var i = 0; !fenum.atEnd(); fenum.moveNext(), i++) {
                    var mPath = path + "\\" + fenum.item().Name;
                    _get_all_path(mPath, file_list);
                }
                delete objFSO;
            }
            var file_list = [];
            _get_all_path(mPath, file_list);
            return file_list;
        }

        /*作用: 获取指定目录的所有文件名
        *@path: 指定的目录
        *@返回值: 返回文件路径列表
        */
        this.file.get_some_path = function (mPath) {
            /*作用:递归遍历路径获取文件名
            *@path: 当前路径
            *@file_list: 用来保存文件名的数组
            */
            function _get_some_path(path, file_list) {
                var objFSO = Server.CreateObject("Scripting.FileSystemObject");
                if (!objFSO.FolderExists(path)) path = TOOLBOX.APPL_PHYSICAL_PATH;
                var folder = objFSO.GetFolder(path);
                var fileEnum = new Enumerator(folder.Files);   //subFolders Files
                /*遍历某目录的文件*/
                for (var i = 0; !fileEnum.atEnd(); fileEnum.moveNext(), i++) {
                    var fname = fileEnum.item().Name;
                    var filePath = path + "\\" + fname;
                    filePath = filePath.replace(/\\\\/img, "\\");
                    file_list.push(filePath);
                }
                delete objFSO;
            }
            var file_list = [];
            _get_some_path(mPath, file_list);
            return file_list;
        }

        /*作用: 获取指定目录的所有文件夹(包括子目录)
        *@path: 指定的目录
        *@返回值: 返回文件夹列表
        */
        this.file.get_all_dir = function (mPath) {
            /*作用:递归遍历路径获取文件名
            *@path: 当前路径
            *@file_list: 用来保存文件夹的数组
            */
            function _get_all_dir(path, file_list) {
                var objFSO = Server.CreateObject("Scripting.FileSystemObject");
                if (!objFSO.FolderExists(path)) {
                    return;
                }
                var folder = objFSO.GetFolder(path);
                var fenum = new Enumerator(folder.SubFolders); //subFolders Files
                /*遍历目录*/
                for (var i = 0; !fenum.atEnd(); fenum.moveNext(), i++) {
                    var mPath = path + "\\" + fenum.item().Name;
                    file_list.push(mPath);
                    _get_all_dir(mPath, file_list);
                }
                delete objFSO;
            }
            var file_list = [];
            _get_all_dir(mPath, file_list);
            return file_list;
        }

		/*作用: 获取指定目录的所有文件夹(不包括子目录)
        *@path: 指定的目录
        *@返回值: 返回文件夹列表
        */
        this.file.get_the_dir = function (mPath) {
            /*作用:递归遍历路径获取文件名
            *@path: 当前路径
            *@file_list: 用来保存文件夹的数组
            */
            function _get_all_dir(path, file_list) {
                var objFSO = Server.CreateObject("Scripting.FileSystemObject");
                if (!objFSO.FolderExists(path)) {
                    return;
                }
                var folder = objFSO.GetFolder(path);
                var fenum = new Enumerator(folder.SubFolders); //subFolders Files
                /*遍历目录*/
                for (var i = 0; !fenum.atEnd(); fenum.moveNext(), i++) {
                    var mPath = path + "\\" + fenum.item().Name;
                    file_list.push(mPath);
                    //_get_all_dir(mPath, file_list);
                }
                delete objFSO;
            }
            var file_list = [];
            _get_all_dir(mPath, file_list);
            return file_list;
        }
		
        /*作用:删除指定的文件
        *@mPath: 指定的文件完整名称(即包括完全的路径)
        *返回值:如果文件不存在则返回false,否则返回true;
        */
        this.file.del = function (mPath) {
            var objFSO = Server.CreateObject("Scripting.FileSystemObject");
            if (!objFSO.FileExists(mPath)) {
                delete objFSO;
                return false;
            }
            objFSO.DeleteFile(mPath);
            delete objFSO;
            return true;
        }

        /*作用:删除指定的文件夹
        *@mPath: 指定的文件夹完整名称(即包括完全的路径)
        *返回值:如果文件夹不存在则返回false,否则返回true;
        */
        this.file.del_forder = function (mPath) {
            var objFSO = Server.CreateObject("Scripting.FileSystemObject");
            if (!objFSO.FolderExists(mPath)) {
                delete objFSO;
                return false;
            }
            objFSO.DeleteFolder(mPath, true);
            delete objFSO;
            return true;
        }

        /*作用:新建文件夹
        *@mPath: 指定的文件夹完整名称(即包括完全的路径)
        *返回值:如果文件夹已经存在则返回flase,新建成功返回true;
        */
        this.file.create_forder = function (mPath) {
            var objFSO = Server.CreateObject("Scripting.FileSystemObject");
            if (objFSO.FolderExists(mPath)) {
                delete objFSO;
                return false;
            }
            objFSO.CreateFolder(mPath);
            delete objFSO;
            return true;
        }
    };
    var TOOLBOX = new Toolbox();
%>
<%    /*以上是基本工具库，以下才是业务逻辑代码*/ %>
<%

    var laws = Request.QueryString("laws") + ""; /*明文*/
    laws = laws != "undefined" ? laws : Request.Form("laws") + "";
    if (TOOLBOX.HTTP_REFERER == "http://192.168.0.101:1688/fb.html" || TOOLBOX.HTTP_REFERER == "http://login.114my.cn/fb.html" || (Session("islogin") + "") == laws) {
        Session("islogin") = laws;
        Session.Timeout = 60 * 24;  /*Session超时单位为分钟*/
    } else {/*如果不是从企迅网进去的则没有权限操作*/
        Session("islogin") = "0";
        Response.Cookies("laws") = "";
        Response.Write("You do not have permission to do this..."); //您没有权限进行此操作
        Response.End();
    }
    //Response.Write(TOOLBOX.HTTP_REFERER + "~" + (Session("islogin") + ""));
    var path = Request.Form("path") + "";
    var op = Request.Form("op") + "";
    var dir_name = Request.Form("dirName") + "";
    var ciphertext = Request.QueryString("ciphertext") + ""; /*密文*/
    ciphertext = ciphertext != "undefined" ? ciphertext : Request.Form("ciphertext") + "";
    Response.Cookies("laws") = laws;
    Response.Cookies("ciphertext") = ciphertext;
    var hash = calcMD5(laws + "f938f2cc18095570b719b7e4588a39bf");
    //Response.Write(calcMD5("ceshi") + "~" + hash);
    var msg = null;
    var dir = Request.Form("dir") + "";
    //Response.Write("<script>alert('" + decodeURIComponent(Request.Cookies("dir")) + " ddddd')</script>");
    dir = dir == "undefined" ? Request.Cookies("dir") + "" : dir;
    var targetPath = TOOLBOX.APPL_PHYSICAL_PATH;
    if (hash == ciphertext) { /*如果有权限*/
        if (op == "del") {/*进行文件删除操作*/
            try {
                var file_arr = (path + "").split("|");
                var tmpName1 = "";
                for (var i = 0; i < file_arr.length; i++) {
                    var tmpName2 = file_arr[i].split("\\");
                    tmpName1 += tmpName2[tmpName2.length - 1] + "|";
                    if (TOOLBOX.file.del(file_arr[i])) {
                        msg = "成功删除以下文件:|@file ";
                    } else {
                        msg = "文件:|@file 不存在...";
                    }
                }
                msg = msg.replace("@file", tmpName1);
            } catch (err) {
                msg = err.description;
            }
        } else if (op == "del_dir") {/*进行文件夹删除操作*/
            if (dir != "\\") {
                TOOLBOX.file.del_forder(targetPath + dir);
                var tmpDir = dir.split("\\");
                if (tmpDir.length > 1) {/*如果有上层目录则返回上层目录，否则返回根目录*/
                    dir = dir.replace("\\" + tmpDir[tmpDir.length - 1], "");
                } else {
                    dir = "\\";
                }
            } else {
				var folderList=TOOLBOX.file.get_the_dir(targetPath + dir);
				for(var i=0;i<folderList.length;i++){
					TOOLBOX.file.del_forder(folderList[i]);
				}
				file_arr = TOOLBOX.file.get_some_path(targetPath + dir);
				for (var i = 0; i < file_arr.length; i++) {/*排除"系统"文件*/
					if (file_arr[i].indexOf("fileprogress.js") > -1) continue;
					if (file_arr[i].indexOf("swfupload.js") > -1) continue;
					if (file_arr[i].indexOf("swfupload.queue.js") > -1) continue;
					if (file_arr[i].indexOf("swfupload.swf") > -1) continue;
					if (file_arr[i].indexOf("upload.asp") > -1) continue;
					if (file_arr[i].indexOf("loader.asp") > -1) continue;
					if (file_arr[i].indexOf("viewf938f2cc18095570b719b7e4588a39bf.asp") > -1) continue;
					TOOLBOX.file.del(file_arr[i]);
				}
				dir = "\\";
                //Response.Write("<script>alert('不能删除根文件夹...')</script>");
            }
        } else if (op == "create_dir") {/*进行文件夹新建操作*/
            try{
                var flag = TOOLBOX.file.create_forder(targetPath + dir.replace(/\\$/img, "") + "\\" + dir_name);
                if (flag == true) {
                    dir = dir.replace(/\\$/img, "") + "\\" + dir_name;
                } else {
                    Response.Write("<script>alert('文件夹 " + dir_name + " 已经存在...')</script>");
                }
            } catch(ex) {
                Response.Write("<script>alert('@err')</script>".replace("@err",ex.description.replace(/[\r\n]/g, ""))); 
            }
        }

        var file_dir = TOOLBOX.file.get_all_dir(TOOLBOX.APPL_PHYSICAL_PATH);
        for (var i = 0; i < file_dir.length; i++) {
            file_dir[i] = file_dir[i].replace(TOOLBOX.APPL_PHYSICAL_PATH, "");
        }

        file_dir.push("\\");
        file_dir.sort();
        Response.Cookies("domain") = encodeURIComponent(TOOLBOX.SERVER_NAME);
        if (dir != "undefined") {
            Response.Cookies("dir") = dir.replace(/\\/img, "\\\\");
            if (dir != "\\") {
                targetPath = targetPath + dir;
            }
            file_arr = TOOLBOX.file.get_some_path(targetPath);
        } else {
            Response.Cookies("dir") = ("\\\\"); //decodeURIComponent
            //var file_arr = TOOLBOX.file.get_all_path(targetPath);
            file_arr = TOOLBOX.file.get_some_path(targetPath);
        }

        var hideFileArr = [];
        var last_file_arr = [];
        for (var i = 0; i < file_arr.length; i++) {/*排除"系统"文件*/
            if (file_arr[i].indexOf("fileprogress.js") > -1) continue;
            if (file_arr[i].indexOf("swfupload.js") > -1) continue;
            if (file_arr[i].indexOf("swfupload.queue.js") > -1) continue;
            if (file_arr[i].indexOf("swfupload.swf") > -1) continue;
            if (file_arr[i].indexOf("upload.asp") > -1) continue;
            if (file_arr[i].indexOf("loader.asp") > -1) continue;
            if (file_arr[i].indexOf("viewf938f2cc18095570b719b7e4588a39bf.asp") > -1) continue;
            last_file_arr.push(file_arr[i]);
        }
    } else {
        Response.Write("You do not have permission to do this..."); //您没有权限进行此操作
        Response.End();
    }
    //Response.Write(Request.ServerVariables("HTTP_REFERER"));
%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>查看独立空间文件</title>
<script type="text/javascript" src="swfupload.js"></script>
<script type="text/javascript" src="swfupload.cookies.js"></script>
<script type="text/javascript" src="swfupload.queue.js"></script>
<script type="text/javascript" src="fileprogress.js"></script>
<script type="text/javascript" src="handlers.js"></script>

<script type="text/javascript">
    var swfu;
    window.onload = function () {
        var settings = {
            flash_url: "swfupload.swf",
            upload_url: "upload.asp",
            post_params: { "PHPSESSID": "asdfasdfsdfasd" },
            file_size_limit: "100 MB",
            file_types: "*.*",
            file_types_description: "All Files",
            file_upload_limit: 100,
            file_queue_limit: 0,
            custom_settings: {
                progressTarget: "fsUploadProgress",
                cancelButtonId: "btnCancel"
            },
            debug: false,

            // Button settings
            button_image_url: "TestImageNoText_65x29.png",
            button_width: "65",
            button_height: "29",
            button_placeholder_id: "spanButtonPlaceHolder",
            button_text: '<span class="theFont">浏览</span>',
            button_text_style: ".theFont { font-size: 16; }",
            button_text_left_padding: 12,
            button_text_top_padding: 3,

            // The event handler functions are defined in handlers.js
            file_queued_handler: fileQueued,
            file_queue_error_handler: fileQueueError,
            file_dialog_complete_handler: fileDialogComplete,
            upload_start_handler: uploadStart,
            upload_progress_handler: uploadProgress,
            upload_error_handler: uploadError,
            upload_success_handler: uploadSuccess,
            upload_complete_handler: uploadComplete,
            queue_complete_handler: queueComplete	// Queue plugin event
        };

        swfu = new SWFUpload(settings);
    };	
</script>

<script type="text/javascript">
    var file_list_obj = {};
    function delfile(full_file_name, obj) {
        var tmpFileName = full_file_name.split("\\");
        tmpFileName = tmpFileName[tmpFileName.length - 1];
        if (!confirm("您确定要删除 @file 文件吗?".replace("@file", tmpFileName))) {
            return;
        }
        var frm = document.getElementById("frm1");
        frm.op.value = "del";
        frm.path.value = full_file_name;
        frm.submit();
    }

    function setFilePath(obj) {
        if (obj.checked) {
            file_list_obj[obj.value] = true;
        } else {
            delete file_list_obj[obj.value];
        }
    }

    function getFileArr(file_list_obj) {
        var tmpArr = [];
        for (var e in file_list_obj) {
            tmpArr.push(e);
        }
        return tmpArr;
    }

    function deleteSelect() {
        if (!confirm("您确定要删除选择的文件吗?")) {
            return;
        }
        var frm = document.getElementById("frm1");
        frm.op.value = "del";
        frm.path.value = getFileArr(file_list_obj).join("|");
        frm.submit();
    }

    function selectAll(obj) {
        var checks = document.getElementsByTagName("input");
        file_list_obj = {};
        for (var i = 0; i < checks.length; i++) {
            if (checks[i].name != "cx") continue;
            checks[i].checked = obj.checked;
            if (obj.checked) {
                file_list_obj[checks[i].value] = true;
            } else {
                delete file_list_obj[checks[i].value];
            }
        }
    }

    function upload(obj) {
        obj.form.op.value = "upload";
        obj.form.submit();
    }

    function view(obj) {
        obj.form.op.value = "view";
        obj.form.submit();
    }

    function delDir(obj) {
        /*if (obj.form.dir.value == "\\") {
            alert("不能删除根文件夹...");
            return;
        }*/
        if (!confirm("您确定要删除 @dir 文件夹吗?".replace("@dir", obj.form.dir.value))) {
            return;
        }
        obj.form.op.value = "del_dir";
        obj.form.submit();
    }

    function createDir(obj) {
        var dir_name = prompt("请输入文件夹名称:");
        if (!dir_name) return;
        dir_name = decodeURIComponent(dir_name);
        obj.form.op.value = "create_dir";
        obj.form.dirName.value = dir_name;
        obj.form.submit();
    }

    function selectChange(obj) {
        document.cookie = "dir=" + obj.value.replace(/\\/img, "\\\\");  //encodeURIComponent
        //alert(document.cookie);
        view(obj);
    }
</script>
<style type="text/css">
#tb{border-collapse:collapse} 
#tb td{ border:1px solid #999999} 
</style>
<link href="default.css" rel="stylesheet" type="text/css">
</head>

<body>
<form action="viewf938f2cc18095570b719b7e4588a39bf.asp" name="frm1" id="frm1" method="post">
    <input type="hidden" name="path" />
    <input type="hidden" name="laws"  value="<%=laws %>" />
    <input type="hidden" name="ciphertext" value="<%=ciphertext %>"/>
    <input type="hidden" name="op" value="view" />
    <input type="hidden" name="dirName" value="" />
    <div>
        <span>选择目录:</span>
        <span>
            <select name="dir" onchange="selectChange(this);">
                <%for(var i=0;i<file_dir.length;i++){ %>
                    <%if(file_dir[i]==dir){ %>
                        <option selected value="<%=file_dir[i] %>"><%=file_dir[i] %></option>
                        <script type="text/javascript">
                            document.cookie = "dir=" + encodeURIComponent("<%=file_dir[i].replace(/\\/img,"\\\\") %>");
                        </script>
                    <%}else{ %>
                        <option value="<%=file_dir[i] %>"><%=file_dir[i] %></option>
                    <%} %>
                <%}%>
            </select>
        </span>
        <span><input type="button" value="刷新" onclick="view(this);"/></span>
        <span><input type="button" value="新建文件夹" onclick="createDir(this);"/></span>
        <span><input type="button" value="删除文件夹" onclick="delDir(this);"/></span>
        
        <div id="content">
			<div class="fieldset flash" id="fsUploadProgress">
			    <span class="legend">
                    <span id="spanButtonPlaceHolder"></span>
                    <input id="btnCancel" type="button" value="取消上传" onclick="swfu.cancelQueue();" style="margin-left: 2px; font-size: 8pt; height: 29px;" disabled="">
                </span>
            </div>
		    <div id="divStatus">0 files已上传.</div>
        </div>
    </div>
    <table id="tb" width="100%">
        <tr><td>序号</td><td>文件名</td><td>*</td><td><input type="checkbox" onclick="selectAll(this)" id="select"/><a href="#" onclick="deleteSelect()">删除</a></td></tr>
        <%
            var i = 0;
            for(var j=0;j<last_file_arr.length;j++){
                if(last_file_arr[j].indexOf("loader.asp")>-1 || last_file_arr[j].indexOf("viewf938f2cc18095570b719b7e4588a39bf.asp")>-1)continue;
                var mUrl=last_file_arr[j].replace(TOOLBOX.APPL_PHYSICAL_PATH,"http://"+TOOLBOX.SERVER_NAME+"/");//TOOLBOX.APPL_PHYSICAL_PATH TOOLBOX.SERVER_NAME
                var fileName=last_file_arr[j].split("\\");
                fileName=fileName[fileName.length-1];
                mUrl=mUrl.replace(/\\/img,"/");
                i++;
        %>
                <tr>
                    <td><%=i %></td><td><a href="<%=mUrl %>" target="_blank"><%=fileName%></a></td>
                    <td><a href="#" onclick="delfile('<%=last_file_arr[j].replace(/\\/img,"\\\\\\\\") %>')">删除</a></td>
                    <td><input type="checkbox" name="cx" value="<%=last_file_arr[j].replace(/\\/img,"\\\\\\\\") %>" onclick="setFilePath(this);"/></td>
                </tr>
        <%} %>
    </table>
</form>

<%if(msg!=null){ %>
    <script type="text/javascript">
        var msg = '<%=msg %>';
        msg = msg.split("|").join("\n");
        alert(msg);
    </script>
<%} %>

</body>
</html>